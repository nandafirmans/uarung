@using Microsoft.Extensions.Configuration
@using Uarung.Web.Utility
@inject IConfiguration Config;

@{
    var errorMessage = (string) ViewData[Constant.ViewDataKey.ErrorMessage];

    var isAdmin = Context.Session
        .GetValue<User>(Constant.SessionKey.JsonUser)?.Role
        .Equals(Constant.UserRole.Admin) ?? false;

    var brandName = Config.GetValue<string>(Constant.ConfigKey.BrandName);
    var defaultController = Config.GetValue<string>(Constant.ConfigKey.RouteDefaultController);
    var defaultAction = Config.GetValue<string>(Constant.ConfigKey.RouteDefaultAction);
    var matchController = ViewContext.RouteData.Values["controller"].Equals(defaultController)
        ? string.Empty
        : ViewContext.RouteData.Values["controller"];
    var matchAction = ViewContext.RouteData.Values["action"].Equals(defaultAction)
        ? string.Empty
        : $"/{ViewContext.RouteData.Values["action"]}";
    var matchRoute = $"/{matchController}{matchAction}";

    var menus = new List<dynamic>()
    {
        new
        {
            Name = "Dashboard",
            FeatherIcon = "home",
            RoutePath = Url.Action("Index", "Home")
        },
        new
        {
            Name = "Sales Register",
            FeatherIcon = "shopping-cart",
            RoutePath = Url.Action("SalesRegister", "Transaction")
        },
        new
        {
            Name = "Transaction",
            FeatherIcon = "bar-chart-2",
            RoutePath = Url.Action("Index", "Transaction")
        },
    };

    if (isAdmin)
    {
        menus = menus
            .Concat(new List<dynamic>()
            {
                new
                {
                    Name = "Reports",
                    FeatherIcon = "archive",
                    RoutePath = Url.Action("Report", "Transaction")
                },
                new
                {
                    Name = "Product",
                    FeatherIcon = "tag",
                    RoutePath = Url.Action("Index", "Product")
                },
                new
                {
                    Name = "Discount",
                    FeatherIcon = "percent",
                    RoutePath = Url.Action("Index", "Discount")
                },
                new
                {
                    Name = "User",
                    FeatherIcon = "user",
                    RoutePath = Url.Action("Index", "User")
                }
            })
            .ToList();
    }
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <title>@ViewData["Title"] - Uarung.Web</title>
    <partial name="_ScriptHeader.cshtml"/>
    @RenderSection("ScriptHeader", false)
</head>
<body>
<nav class="navbar navbar-dark fixed-top bg-primary flex-md-nowrap p-0">
    <a class="navbar-brand col-sm-3 col-md-2 mr-0" href="#">@brandName</a>
    <ul class="navbar-nav px-3">
        <li class="nav-item text-nowrap">
            <a class="nav-link" asp-controller="Auth" asp-action="Logout">Sign out</a>
        </li>
    </ul>
</nav>
<div class="container-fluid">
    <div class="row">
        <nav class="col-md-2 d-none d-md-block bg-light sidebar">
            <div class="sidebar-sticky">
                <ul class="nav flex-column">
                    @foreach (var menu in menus)
                    {
                        <li class="nav-item">
                            <a class="nav-link @(matchRoute.Equals(menu.RoutePath) ? "active" : "")" href="@menu.RoutePath">
                                <span data-feather="@menu.FeatherIcon"></span>
                                @menu.Name
                            </a>
                        </li>
                    }
                </ul>
            </div>
        </nav>
        
        <main role="main" class="col-md-9 ml-sm-auto col-lg-10 px-4">
            @RenderBody()
        </main>
    </div>
</div>
@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger alert-dismissible alert-error-message d-flex align-items-center p-2 fade" id="errorAlert">
        <span class="text-monospace">@errorMessage</span>
        <button type="button" class="btn btn-outline-danger rounded-circle btn-times-close border-0 p-0 ml-2" data-dismiss="alert">
            <span>&times;</span>
        </button>
    </div>
    <script>
        (function(){
            if (window.history) {
                const removedErrQuery = window.location.protocol + "//" + window.location.host + window.location.pathname;
                window.history.pushState({ path: removedErrQuery }, "", removedErrQuery);
            }

            setTimeout(function() {
                document.getElementById("errorAlert").className += " show";
            }, 500);
        })();
    </script>
}
<partial name="_ScriptFooter.cshtml"/>
@RenderSection("ScriptFooter", false)
</body>
</html>